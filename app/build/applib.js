angular.module("calcuratorusApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","uiSwitch"]).config(function($routeProvider){"use strict";$routeProvider.when("/",{templateUrl:"main/views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/yeoman",{templateUrl:"main/views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"main/views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/calc",{templateUrl:"keypad/views/keypad.html",controller:"KeyPadCtrl",controllerAs:"keypad"}).when("/roman",{templateUrl:"keypad/views/roman_keypad.html",controller:"KeyPadCtrl",controllerAs:"keypad"}).when("/numeric",{templateUrl:"keypad/views/numeric_keypad.html",controller:"KeyPadCtrl",controllerAs:"keypad"}).otherwise({redirectTo:"/"})}),angular.module("calcuratorusApp").controller("numericCalculatorCtrl",["$scope","roman_numeral_conversion","utils","$log","_",function($scope,roman_numeral_conversion,utils,$log,_){"use strict";$scope.inputValues=[],$scope.mathOperation=null,$scope.currentMapPos=0,$scope.displayValue="0";var clear=function(){$scope.inputValues=[],$scope.currentMapPos=0,$scope.displayValue="0",$scope.mathOperation=null,$scope.$broadcast("receivedMathFunctionRequest",null)},parseValueRange=function(value){var result=null;return _.isNumber(value)?result=utils.isInteger(value)?_.inRange(value,1,4999)?parseInt(value):"Value beyond limit of 1 to 4999 ("+value+")":"Invalid Entry: "+value:_.isNaN(value)&&(result="Non est numerus"),result},executeMathFunction=function(){var result=null;if(1===$scope.inputValues.length)result=parseValueRange($scope.inputValues[0]);else if($scope.mathOperation&&2===$scope.inputValues.length){switch($scope.mathOperation){case"+":result=$scope.inputValues[0]+$scope.inputValues[1];break;case"-":result=$scope.inputValues[0]-$scope.inputValues[1];break;case"*":result=$scope.inputValues[0]*$scope.inputValues[1];break;case"/":result=$scope.inputValues[0]/$scope.inputValues[1];break;default:result="Non est numerus"}result=parseValueRange(result),_.isNumber(result)||($scope.inputValues=[])}return result};this.handleNumberClicked=function(value){$log.debug(value),"0"===$scope.displayValue?$scope.displayValue=value:$scope.displayValue+=value,$scope.inputValues[$scope.currentMapPos]=parseInt($scope.displayValue),$scope.$broadcast("receivedKeypadValue",$scope.inputValues[$scope.currentMapPos])},this.handleFunctionClicked=function(value){1===$scope.inputValues.length&&($log.debug(value),$scope.displayValue="0",$scope.mathOperation=value,$scope.currentMapPos++,$scope.$broadcast("receivedMathFunctionRequest",value))},this.handleClear=function(){$log.debug("handleClearClicked"),clear(),$scope.$broadcast("receivedClearRequest")},this.handleEquals=function(){var result=executeMathFunction();if(result){if(_.isNumber(result)&&_.isFinite(result)){var convertedValue=roman_numeral_conversion.covertNumberToRoman(result);$scope.$broadcast("valueConverted",convertedValue),$scope.$broadcast("receivedKeypadValue",result)}else $scope.$broadcast("valueConverted",result),$scope.$broadcast("receivedKeypadValue",null);clear()}}}]),angular.module("calcuratorusApp").controller("NumericToRomanCtrl",["$rootScope","$scope",function($rootScope,$scope){"use strict";var activeCalculationValues=[];$scope.handleKeypadInput=function(event){if(event.currentTarget&&event.currentTarget.innerHTML){var selectedValue=parseInt(event.currentTarget.innerHTML);activeCalculationValues.push(selectedValue)}}}]),angular.module("calcuratorusApp").controller("romanCalculatorCtrl",["$scope","roman_numeral_conversion","utils","$log","_",function($scope,roman_numeral_conversion,utils,$log,_){"use strict";$scope.inputValues=[],$scope.mathOperation=null,$scope.currentMapPos=0,$scope.displayValue="0";var clear=function(){$scope.inputValues=[],$scope.currentMapPos=0,$scope.displayValue="0",$scope.mathOperation=null,$scope.$broadcast("receivedMathFunctionRequest",null)},executeMathFunction=function(){var result=null;if(1===$scope.inputValues.length)result=$scope.inputValues[0];else if($scope.mathOperation&&2===$scope.inputValues.length){switch($scope.mathOperation){case"+":result=$scope.inputValues[0]+$scope.inputValues[1];break;case"-":result=$scope.inputValues[0]-$scope.inputValues[1];break;case"*":result=$scope.inputValues[0]*$scope.inputValues[1];break;case"/":result=$scope.inputValues[0]/$scope.inputValues[1];break;default:result="Non est numerus"}_.isNumber(result)?utils.isInteger(result)?_.inRange(result,0,4999)?result=parseInt(result):(result="Value beyond limit of 1 to 4999 ("+result+")",$scope.inputValues=[]):(result="Invalid Entry: "+result,$scope.inputValues=[]):_.isNaN(result)&&(result="Non est numerus",$scope.inputValues=[])}return result};this.handleNumberClicked=function(value){$log.debug(value),"0"===$scope.displayValue?$scope.displayValue=value:$scope.displayValue+=value,$scope.inputValues[$scope.currentMapPos]=parseInt($scope.displayValue),$scope.$broadcast("receivedKeypadValue",$scope.inputValues[$scope.currentMapPos])},this.handleFunctionClicked=function(value){1===$scope.inputValues.length&&($log.debug(value),$scope.displayValue="0",$scope.mathOperation=value,$scope.currentMapPos++,$scope.$broadcast("receivedMathFunctionRequest",value))},this.handleClear=function(){$log.debug("handleClearClicked"),clear(),$scope.$broadcast("receivedClearRequest")},this.handleEquals=function(){var result=executeMathFunction();if(result){if(_.isNumber(result)){var convertedValue=roman_numeral_conversion.covertNumberToRoman(result);$scope.$broadcast("valueConverted",convertedValue),$scope.$broadcast("receivedKeypadValue",result)}else $scope.$broadcast("valueConverted",result),$scope.$broadcast("receivedKeypadValue",null);clear()}}}]),angular.module("calcuratorusApp").controller("RomanToNumericCtrl",["$rootScope","$scope",function($rootScope,$scope){"use strict";var activeCalculationValues=[];$scope.handleKeypadInput=function(event){if(event.currentTarget&&event.currentTarget.innerHTML){var selectedValue=parseInt(event.currentTarget.innerHTML);activeCalculationValues.push(selectedValue)}}}]),angular.module("calcuratorusApp").directive("convertedResultsDirective",[function(){"use strict";return{restrict:"E",replace:!0,templateUrl:"calculator/views/conversion_results.html",require:"numericCalculator",scope:{},controller:function($scope){$scope.$on("valueConverted",function(event,args){$scope.convertedText=args}),$scope.$on("receivedClearRequest",function(){$scope.convertedText=null})}}}]),angular.module("calcuratorusApp").directive("numericCalculator",["$log",function($log){"use strict";return{restrict:"E",controller:"numericCalculatorCtrl",link:function(){$log.debug("Parent numericCalculator directive linked")}}}]),angular.module("calcuratorusApp").directive("numericDisplay",["$compile","$log",function($compile,$log){"use strict";return{restrict:"A",replace:!0,templateUrl:"calculator/views/numeric/numeric_display.html",require:"numericCalculator",scope:{},controller:function($scope){$scope.$on("receivedKeypadValue",function(event,args){$log.debug("receiveKeypadValue "+args),$scope.field=args}),$scope.$on("receivedClearRequest",function(){$log.debug("receivedClearRequest"),$scope.field=null}),$scope.$on("receivedMathFunctionRequest",function(event,args){$log.debug("receivedMathFunctionRequest"),$scope.operation=args})},link:function(scope,element,attrs,numericCalculatorCtrl){scope.numericCalculatorCtrl=numericCalculatorCtrl,element.on("keyup",function(){var inputVal,inputEle=element.find("input");if(inputVal=inputEle.val(),inputVal=inputVal.replace(/[^0-9]+/g,""),parseInt(inputVal)>0){var intValue=parseInt(inputVal);scope.field=""+intValue,inputEle.val(scope.field),numericCalculatorCtrl.handleNumberClicked(intValue)}else inputEle.val("")})}}}]),angular.module("calcuratorusApp").directive("romanCalculator",["$log",function($log){"use strict";return{restrict:"E",controller:"romanCalculatorCtrl",link:function(){$log.debug("Parent romanCalculator directive linked")}}}]),angular.module("calcuratorusApp").directive("romanDisplay",["$compile","$log",function($compile,$log){"use strict";return{restrict:"A",replace:!0,templateUrl:"calculator/views/roman/roman_display.html",require:"romanCalculator",scope:{},controller:function($scope){$scope.$on("receivedKeypadValue",function(event,args){$log.debug("receiveKeypadValue "+args),$scope.field=args}),$scope.$on("receivedClearRequest",function(){$log.debug("receivedClearRequest"),$scope.field=null}),$scope.$on("receivedMathFunctionRequest",function(event,args){$log.debug("receivedMathFunctionRequest"),$scope.operation=args})},link:function(scope,element,attrs,numericCalculatorCtrl){scope.numericCalculatorCtrl=numericCalculatorCtrl,element.on("keyup",function(){var inputVal,inputEle=element.find("input");if(inputVal=inputEle.val(),inputVal=inputVal.replace(/[^0-9]+/g,""),parseInt(inputVal)>0){var intValue=parseInt(inputVal);scope.field=""+intValue,inputEle.val(scope.field),numericCalculatorCtrl.handleNumberClicked(intValue)}else inputEle.val("")})}}}]),angular.module("calcuratorusApp").factory("roman_numeral_conversion",[function(){"use strict";var convert1s=function(value){var retVal="";return value%=10,retVal=9===value?"IX":value>4?"VIII".substr(0,value-4):4===value?"IV":"III".substr(0,value)},convert10s=function(value){var retVal="";return value=Math.floor(value%100/10),retVal=9===value?"XC":value>4?"LXXX".substr(0,value-4):4===value?"XL":"XXX".substr(0,value)},convert100s=function(value){var retVal="";return value=Math.floor(value%1e3/100),retVal=9===value?"CM":value>4?"DCCC".substr(0,value-4):4===value?"CD":"CCC".substr(0,value)},convert1000s=function(value){return"MMMM".substr(0,Math.floor(value/1e3))},parseRoman=function(value){return convert1000s(value)+convert100s(value)+convert10s(value)+convert1s(value)},covertNumberToRoman=function(value){var result,numberVal=Math.round(parseFloat(value));return result=parseRoman(numberVal)},covertRomanToNumber=function(value){var result,numberVal=Math.round(parseFloat(value));return result=parseRoman(numberVal)};return{covertNumberToRoman:covertNumberToRoman,covertRomanToNumber:covertRomanToNumber}}]),angular.module("calcuratorusApp").factory("utils",[function(){"use strict";var isInteger=function(n){return n%1===0};return{isInteger:isInteger}}]),angular.module("calcuratorusApp").directive("functionKeypadDirective",[function(){"use strict";return{restrict:"EA",replace:!0,templateUrl:"keypad/views/function_keypad.html",require:"numericCalculator",link:function(scope,element,attrs,numericCalculatorCtrl){scope.numericCalculatorCtrl=numericCalculatorCtrl},scope:{},controller:function($scope){$scope.handleFunction=function(event){event&&event.currentTarget&&event.currentTarget.value&&$scope.numericCalculatorCtrl.handleFunctionClicked(event.currentTarget.value)},$scope.handleEquals=function(){$scope.numericCalculatorCtrl.handleEquals()}}}}]),angular.module("calcuratorusApp").directive("numericKeypadDirective",[function(){"use strict";return{restrict:"A",replace:!0,templateUrl:"keypad/views/numeric_keypad.html",require:"numericCalculator",link:function(scope,element,attrs,numericCalculatorCtrl){scope.numericCalculatorCtrl=numericCalculatorCtrl},scope:{},controller:function($scope){$scope.handleKeypadInput=function(value){value&&value.currentTarget&&value.currentTarget.value&&$scope.numericCalculatorCtrl.handleNumberClicked(value.currentTarget.value)},$scope.handleKeypadClear=function(){$scope.numericCalculatorCtrl.handleClear()}}}}]),angular.module("calcuratorusApp").directive("romanFunctionKeypadDirective",[function(){"use strict";return{restrict:"EA",replace:!0,templateUrl:"keypad/views/function_keypad.html",require:"romanCalculator",link:function(scope,element,attrs,romanCalculatorCtrl){scope.numericCalculatorCtrl=romanCalculatorCtrl},scope:{},controller:function($scope){$scope.handleFunction=function(event){event&&event.currentTarget&&event.currentTarget.value&&$scope.numericCalculatorCtrl.handleFunctionClicked(event.currentTarget.value)},$scope.handleEquals=function(){$scope.numericCalculatorCtrl.handleEquals()}}}}]),angular.module("calcuratorusApp").directive("romanKeypadDirective",[function(){"use strict";return{restrict:"A",replace:!0,templateUrl:"keypad/views/roman_keypad.html",require:"romanCalculator",link:function(scope,element,attrs,romanCalculatorCtrl){scope.romanCalculatorCtrl=romanCalculatorCtrl},scope:{},controller:function($scope){$scope.handleKeypadInput=function(value){value&&value.currentTarget&&value.currentTarget.value&&$scope.romanCalculatorCtrl.handleNumberClicked(value.currentTarget.value)},$scope.handleKeypadClear=function(){$scope.romanCalculatorCtrl.handleClear()}}}}]),angular.module("calcuratorusApp").controller("AboutCtrl",function(){"use strict";this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("calcuratorusApp").controller("MainCtrl",["$rootScope","$scope",function($rootScope,$scope){"use strict";this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],$scope.displayValue="123"}]),function(module,_){"use strict";module("calcuratorusApp").factory("_",function(){return _})}(angular.module,_.noConflict());
//# sourceMappingURL=applib.js.map